[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dean-orchestration"
version = "0.1.0"
description = "Orchestration layer for the DEAN (Distributed Evolutionary Agent Network) system"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "DEAN Development Team", email = "dean-dev@example.com"},
]
maintainers = [
    {name = "DEAN Development Team", email = "dean-dev@example.com"},
]
keywords = ["orchestration", "distributed-systems", "evolutionary-algorithms", "agent-systems"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

dependencies = [
    "requests>=2.31.0",
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "tenacity>=8.2.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
    "types-redis>=4.6.0",
    "types-pyyaml>=6.0.12",
    "pre-commit>=3.5.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.2",
    "respx>=0.20.2",
]

docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.14",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/dean-project/dean-orchestration"
Documentation = "https://dean-orchestration.readthedocs.io"
Repository = "https://github.com/dean-project/dean-orchestration"
"Bug Tracker" = "https://github.com/dean-project/dean-orchestration/issues"

[project.scripts]
dean = "dean_orchestration.cli:main"
dean-server = "dean_orchestration.server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
dean_orchestration = [
    "web/static/**/*",
    "configs/**/*.yaml",
]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
    "--verbose",
    "--cov=dean_orchestration",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "S101",  # use of assert detected
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assert in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "redis.*",
    "yaml.*",
]
ignore_missing_imports = true

[tool.coverage.run]
branch = true
source = ["src/dean_orchestration"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"