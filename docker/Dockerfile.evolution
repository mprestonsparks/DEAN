# Production Dockerfile for Evolution API Service
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /build

# Copy requirements first for better caching
COPY requirements/evolution.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r evolution.txt

# Production stage
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 evolution

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/evolution/.local

# Copy application code
COPY --chown=evolution:evolution ./evolution-api /app/evolution-api
COPY --chown=evolution:evolution ./shared /app/shared

# Create necessary directories
RUN mkdir -p /app/data /app/logs && \
    chown -R evolution:evolution /app/data /app/logs

# Switch to non-root user
USER evolution

# Add Python packages to PATH
ENV PATH=/home/evolution/.local/bin:$PATH
ENV PYTHONPATH=/app:$PYTHONPATH

# Environment variables
ENV EVOLUTION_HOST=0.0.0.0
ENV EVOLUTION_PORT=8090
ENV LOG_LEVEL=INFO

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8090/health || exit 1

# Expose port
EXPOSE 8090

# Run the application
CMD ["python", "-m", "evolution-api.main"]