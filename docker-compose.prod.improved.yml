version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  postgres-prod:
    image: postgres:13-alpine
    container_name: dean-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d:ro
      - ./backups/postgres:/backups
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 512m

  redis-prod:
    image: redis:7-alpine
    container_name: dean-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 768m
        reservations:
          memory: 256m

  orchestrator:
    image: dean/orchestrator:latest
    build:
      context: ./src/orchestration
      dockerfile: Dockerfile.prod
      cache_from:
        - dean/orchestrator:latest
    container_name: dean-orchestrator
    restart: unless-stopped
    ports:
      - "${ORCHESTRATOR_PORT:-8082}:8082"
    environment:
      - ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-prod:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis-prod:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost,https://localhost}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres-prod:
        condition: service_healthy
      redis-prod:
        condition: service_healthy
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: '${ORCHESTRATOR_CPU_LIMIT:-2.0}'
          memory: ${ORCHESTRATOR_MEMORY_LIMIT:-2g}
        reservations:
          cpus: '1.0'
          memory: 1g

  nginx:
    image: nginx:alpine
    container_name: dean-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - ./wait-for-it.sh:/wait-for-it.sh:ro
    depends_on:
      orchestrator:
        condition: service_healthy
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: dean_network
    driver: bridge