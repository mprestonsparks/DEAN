server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          __path__: /var/lib/docker/containers/*/*log
    
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>(?:[^|]*))\|(?P<image_name>(?:[^|]*))
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
          image_name:
      - output:
          source: output

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log
    
    pipeline_stages:
      - match:
          selector: '{job="varlogs"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\w+ \d+ \d+:\d+:\d+) (?P<hostname>\S+) (?P<service>\S+?)(?:\[(?P<pid>\d+)\])?: (?P<message>.*)'
            - labels:
                hostname:
                service:
                pid:
            - timestamp:
                format: 'Jan 2 15:04:05'
                source: timestamp

  # DEAN specific logs
  - job_name: dean
    static_configs:
      - targets:
          - localhost
        labels:
          job: dean
          __path__: /var/lib/docker/containers/*dean-orchestrator*/*log
    
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
      - regex:
          expression: '(?P<level>\w+)\s+(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3})\s+(?P<module>\S+)\s+(?P<message>.*)'
          source: output
      - labels:
          level:
          module:
      - timestamp:
          format: '2006-01-02 15:04:05.000'
          source: timestamp
      - output:
          source: message